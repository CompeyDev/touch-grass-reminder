plugins {
	id 'maven-publish'
	alias libs.plugins.quilt.loom
}

base {
	archivesName = project.archives_base_name
}

version = "$project.version+${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
	mavenCentral()
	maven {
		// For ImageIO
		name "SonaType Maven"
		url "https://oss.sonatype.org/content/repositories/snapshots"
	}

	maven {
		// For YACL
		name "Xander Maven"
		url "https://maven.isxander.dev/releases"
	}

	maven { 
		// For quilt-parsers
		name "QuiltMC Maven"
		url "https://maven.quiltmc.org/repository/release"
	}

	maven {
		// For modmenu
		name "TerraformersMC Maven"
		url "https://maven.terraformersmc.com/releases"
	}
}

loom {
	mods {
		"touch_grass_warning" {
			sourceSet("main")
		}
	}
}

dependencies {
	minecraft libs.minecraft
	mappings loom.layered {
		mappings "org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:intermediary-v2"
		officialMojangMappings()
	}
	modImplementation libs.quilt.loader
	modImplementation libs.quilted.fabric.api
    modImplementation "dev.isxander.yacl:yet-another-config-lib-fabric:3.2.1+1.20"
}

processResources {
	inputs.property 'version', version

	filesMatching('quilt.mod.json') {
		expand 'version': version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	withSourcesJar()
}

jar {
	from('LICENSE') {
		rename { "${it}_${base.archivesName.get()}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
